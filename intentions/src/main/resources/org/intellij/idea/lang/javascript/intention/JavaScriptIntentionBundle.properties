bool.de.morgans.law = DeMorgan law
bool.de.morgans.law.and.to.or = Replace && with ||
bool.de.morgans.law.or.to.and = Replace || with &&
bool.flip.comparison = Flip comparison
bool.flip.comparison.equals = Flip {0}
bool.flip.comparison.not.equals = Flip {0} to {1}
bool.flip.comparison.unknown = Flip comparison
bool.flip.conjunction = Flip conjunction operands
bool.flip.conjunction.message = Flip {0}
bool.negate.comparison = Negate comparison
bool.negate.comparison.equals = Negate {0}
bool.negate.comparison.not.equals = Negate {0} to {1}
bool.remove.boolean.equality = Remove boolean equality
bool.remove.boolean.equality.message = Simplify {0}
braces.add = Add braces
braces.add.message = Add braces from ''{0}'' statement
braces.remove = Remove braces
braces.remove.message = Remove braces from ''{0}'' statement
comment.change.to.cstyle.comment = Replace with C-style comment
comment.change.to.end.of.line.comment = Replace with end-of-line comment
comment.move.comment.to.separate.line = Move comment to separate line
conditional.flip.conditional = Flip ?:
conditional.flip.if = Flip if-else
conditional.remove.conditional = Simplify ?:
conditional.replace.conditional.with.if = Replace ?: with if-else
constant.compute.expression = Compute constant value
constant.compute.subexpression = Compute constant value for subexpression
constant.compute.subexpression.message = Compute constant value of {0} {1} {2}
increment.extract = Extract increment
increment.extract.message = Extract {0}
initialization.merge.declaration.and.initialization = Merge declaration and initialization
initialization.split.declaration.and.initialization = Split into declaration and initialization
loop.merge.parallel.for.loops = Merge 'for' loops
loop.merge.parallel.for.in.loops = Merge 'for-in' loops
number.convert.integer.to.decimal = Convert to decimal
number.convert.integer.to.hex = Convert to hex
number.convert.integer.to.octal = Convert to octal
number.replace.multiply.with.shift = Replace multiply with shift
number.replace.multiply.with.shift.message = Replace {0} with {1}
number.replace.shift.with.multiply = Replace shift with multiply
number.replace.shift.with.multiply.message = Replace {0} with {1}
opassign.replace.with.operator.assignment = Replace assignment with operator assignment
opassign.replace.with.operator.assignment.message = Replace = with {0}=
parenthesis.remove.unnecessary.parentheses = Remove unnecessary parentheses
string.double.quoted.to.single.quoted = Replace double-quoted string with single-quoted string
string.join.concatenated.string.literals = Join concatenated String literals
string.single.to.double.quoted.string = Replace single-quoted string with double-quoted string
switchtoif.replace.if.with.switch = Replace if with switch
switchtoif.replace.switch.with.if = Replace switch with if
trivialif.merge.else.if = Merge else-if
trivialif.merge.if.and = Merge 'if's
trivialif.merge.if.or = Merge 'if's
trivialif.merge.parallel.ifs = Merge 'if's
trivialif.remove.redundant.else = Remove redundant else
trivialif.replace.if.with.conditional = Replace if-else with ?:
trivialif.simplify.if.else = Simplify if-else
trivialif.split.else.if = Split else-if
trivialif.split.if.and = Split AND-ed if
trivialif.split.if.or = Split OR-ed if
